import numpy as np
from sklearn.datasets import load_iris
from sklearn.model_selection import train_test_split
from sklearn.neighbors import KNeighborsClassifier
from sklearn.metrics import accuracy_score

# Load the iris dataset
iris = load_iris()
X = iris.data
y = iris.target

# Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Initialize the k-NN classifier
k = 3  # Define the value of k
knn = KNeighborsClassifier(n_neighbors=k)

# Train the k-NN classifier
knn.fit(X_train, y_train)

# Predict the class labels for the test set
y_pred = knn.predict(X_test)

# Calculate the accuracy of the classifier
accuracy = accuracy_score(y_test, y_pred)
print(f"Accuracy: {accuracy}")

# Print correct and wrong predictions
for i in range(len(y_pred)):
   prediction = iris.target_names[y_pred[i]]
   actual = iris.target_names[y_test[i]]
   result = "Correct" if prediction == actual else "Wrong"
   print(f"Prediction: {prediction}\tActual: {actual}\tResult: {result}")
